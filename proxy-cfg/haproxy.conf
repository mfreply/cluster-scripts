global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend blue-demo-www
        bind *:80 interface ens6
        bind *:443 ssl crt /etc/haproxy/certs/blue-demo.pem interface ens6

        http-request redirect scheme https unless { ssl_fc }
        http-request set-header X-Forwarded-Proto https

        use_backend cluster-ingress
        default_backend no-match


frontend blue-demo-wg
        bind *:80 interface wg0
        bind *:443 ssl crt /etc/haproxy/certs/blue-demo.pem interface wg0

        http-request redirect scheme https unless { ssl_fc }
        http-request set-header X-Forwarded-Proto https

        acl is_base hdr(host) -m reg -i ^(www\.|dev\.)?blue-demo\.com$
        acl is_reg  hdr(host) -i registry.blue-demo.com

        use_backend blue-demo-registry if is_reg
        use_backend cluster-ingress if is_base
        default_backend no-match

backend cluster-ingress
        server k8s-master 10.142.1.6:30926
        filter compression
        compression direction both
        compression algo gzip

backend blue-demo-registry
        server k8s-master 10.142.1.6:5000
        filter compression
        compression direction both
        compression algo gzip

backend no-match
        mode http
        http-request deny deny_status 404
